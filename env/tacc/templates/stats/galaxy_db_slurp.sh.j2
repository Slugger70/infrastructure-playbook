#!/bin/bash
##
## This file is maintained by Ansible - CHANGES WILL BE OVERWRITTEN
##
#set -xv
set -e

function arr2awk() {
    t=$(declare -p $1)
    eval "declare -A t="${t#*=}
    s=
    for k in "${!t[@]}"; do
        s+="$k=\"\$${t[$k]}\","
    done
    echo -n ${s:0:-2}
}

function query() {
    if [ -n "$4" ]; then
        psql {{ stats_slurp.db_name }} -c "COPY ($1) TO STDOUT WITH CSV" | awk -F, "{print \"${2},$(arr2awk $4)\" $(arr2awk $3)}"
    else
        psql {{ stats_slurp.db_name }} -c "COPY ($1) TO STDOUT WITH CSV" | awk -F, "{print \"${2} $(arr2awk $3)}"
    fi
}


function jobs_queued_internal_by_handler() {
    sql="
        SELECT
            t.handler AS handler,
            coalesce(j.ct, 0) AS ct
        FROM
            (
                SELECT
                    unnest(
                        ARRAY['{{ stats_slurp.galaxy_handlers | join("', '") }}']
                    ) AS handler
            ) AS t
        LEFT OUTER JOIN
            (
                SELECT
                    handler AS handler,
                    count(handler) AS ct
                FROM
                    job
                WHERE
                    state = 'queued'
                    AND job_runner_external_id IS null
                GROUP BY
                    handler
            ) AS j
            ON
                t.handler = j.handler
    "
    declare -A fields=( [count]=2 )
    declare -A tags=( [handler]=1 )
    query "$sql" "${FUNCNAME[0]}" fields tags
}

function jobs_queued() {
    sql="
        SELECT
            sum(CASE WHEN job_runner_external_id IS NOT null THEN 1 ELSE 0 END),
            sum(CASE WHEN job_runner_external_id IS null THEN 1 ELSE 0 END)
        FROM
            job
        WHERE
            state = 'queued'
    "
    declare -A fields=( [internal]=2 [external]=1 )
    query "$sql" "${FUNCNAME[0]}" fields
}

function disk_usage_sum() {
    sql="
        SELECT
            sum(total_size)
        FROM
            dataset
        WHERE
            NOT purged
    "
    declare -A fields=( [value]=1 )
    query "$sql" "${FUNCNAME[0]}" fields
}

#for f in "$@"; do
#    $f
#done

jobs_queued_internal_by_handler
jobs_queued
disk_usage_sum

---

- name: Spawn instance(s)
  hosts: all
  gather_facts: no
  environment:
     OS_CLOUD: "{{ cloud_id }}"
     OS_IDENTITY_API_VERSION: '3'
  tasks:

    - name: Spawn new instance
      os_server:
        cloud: "{{ cloud_id }}"
        name: "{{ inventory_hostname }}"
        image: "{{ image }}"
        flavor: "{{ flavor }}"
        key_name: "{{ key_name }}"
        nics: "{{ nics }}"
        security_groups: "{{ security_groups }}"
        auto_ip: "{{ auto_ip }}"
        meta: group=galaxynodes
        userdata: |
          #cloud-config
          package_upgrade: false
      delegate_to: localhost
      register: spawned_out

    - name: Update inventory with spawned instance IP
      set_fact:
        ansible_host: "{{ spawned_out.server.private_v4 }}"
      delegate_to: localhost

    - name: Wait for instance to become accessible
      wait_for_connection:

#- name: Spin on instance(s)
#  hosts: all
#  gather_facts: no
#  tasks:
#    - name: Spin waiting for instance to become accessible
#      action: setup
#      #command: >
#      #  ssh -o BatchMode=yes -o UserKnownHostsFile=/dev/null
#      #  -o StrictHostKeyChecking=no -o ConnectTimeout=10
#      #  {{ ansible_ssh_common_args }}
#      #  {{ ansible_user }}@{{ ansible_host }} /bin/true
#      register: alive
#      until: alive is success
#      retries: 90  # if it's not up in 2 minutes, give up
#      delay: 2
#      #delegate_to: localhost
